<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="admin">

	<!-- 1대 다 -->
	<resultMap type="kh.finalproject.sims.admin.model.vo.AdminQnaAnsVo" id="adminQnaAnsCollectionMap">
		<id column="AA_NO" property="aaNo"/>
		<result column="AQ_NO" property="aqNo"/>
		<result column="ANS_ADMIN_ID" property="adminId"/>
		<result column="ANS_USER_ID" property="userId"/>
		<result column="AA_CONTENT" property="aaContent"/>
		<result column="AA_DATE" property="aaDate"/>
		<result column="AA_REDATE" property="aaRedate"/>
		
		<collection column="AA_NO" property="replyList" ofType="kh.finalproject.sims.admin.model.vo.AdminQnaReplyVo">
			<id column="RPL_NO" property="rplNo"/>
			<result column="RPL_DATE" property="rplDate"/>
			<result column="RPL_REDATE" property="rplRedate"/>
			<result column="RPL_CONTENT" property="rplContent"/>
			<result column="RPL_USER_ID" property="adminId"/>
			<result column="RPL_ADMIN_ID" property="userId"/>
		</collection>
	</resultMap>

	<!-- 자주묻는질문 -->
	<!-- 자주묻는질문 목록 -->
	<select id="selectFaqList" resultType="kh.finalproject.sims.admin.model.vo.AdminFaqVo">
		SELECT FAQ_NO,
			FAQ_TITLE,
			FAQ_CONTENT,
			ADMIN_ID,
			FAQ_REWRITER,
			FAQ_DATE,
			FAQ_REDATE
			FROM FAQ
			ORDER BY FAQ_REDATE DESC
	</select>
	<!-- 자주묻는질문 상세내용 -->
	<select id="selectFaqDetail" resultType="kh.finalproject.sims.admin.model.vo.AdminFaqVo">
		SELECT *
			FROM FAQ
	    	WHERE FAQ_NO = #{faqNo}
	</select>
	<!-- 자주묻는질문 작성 -->
  	<insert id="insertFaqWrite" parameterType="kh.finalproject.sims.admin.model.vo.AdminFaqVo">
		INSERT INTO FAQ (FAQ_NO, FAQ_TITLE, FAQ_CONTENT, ADMIN_ID) VALUES(
		    FAQ_NO_SEQ.NEXTVAL,
			#{faqTitle},
			#{faqContent},
			#{adminId}
		)
	</insert>
	<!-- 자주묻는질문 수정  -->
	<update id="selectFaqModify" parameterType="kh.finalproject.sims.admin.model.vo.AdminFaqVo">
		UPDATE FAQ
		SET 
		 FAQ_TITLE = #{faqTitle}
		,FAQ_CONTENT=#{faqContent}
		,FAQ_REWRITER=#{faqRewriter} 
		WHERE FAQ_NO=#{faqNo}
	</update>
	<!-- 자주묻는질문 삭제 -->
	<delete id="deleteFaq" parameterType="_int">
		DELETE FROM FAQ WHERE FAQ_NO=#{faqNo}
	</delete>
	
	<!-- 자주묻는질문 검색 -->
	<select id="selectSearchFaqList" resultType="kh.finalproject.sims.admin.model.vo.AdminFaqVo">
		SELECT * FROM FAQ 
		<choose>
			<when test="searchOption != null and searchOption == 'title'"> WHERE FAQ_TITLE LIKE '%'|| #{searchBox} ||'%'</when>
			<when test="searchOption != null and searchOption == 'writer'"> WHERE ADMIN_ID LIKE '%'|| #{searchBox} ||'%'</when>
			<when test="searchOption != null and searchOption == 'content'"> WHERE FAQ_CONTENT LIKE '%'|| #{searchBox} ||'%'</when>
		</choose>
		ORDER BY FAQ_DATE DESC
	</select>
	
	<!-- 신고 리뷰 -->
	<!-- 신고 리뷰 목록 -->
	<select id="selectReviewReportList" resultType="kh.finalproject.sims.admin.model.vo.AdminReviewMngtVo">
		SELECT R.REVIEW_NO, R.REPORT_DATE, 
		    CASE R.REPORT_STATUS
		        WHEN 1 THEN '미확인'
		        WHEN 2 THEN '삭제'
		        WHEN 3 THEN '반려'
		        ELSE '알 수 없음'
		    END AS REPORT_STATUS, 
		    B.REVIEW_CONTENT, B.USER_ID, B.BIZ_ID, R.REPORT_REASON
		FROM REVIEW_REPORT R
		JOIN BIZ_REVIEW B ON R.REVIEW_NO = B.REVIEW_NO
		ORDER BY R.REPORT_DATE DESC
	</select>
	<!-- 신고 리뷰 검색 -->
	<select id="selectSearchReviewReportList" resultType="kh.finalproject.sims.admin.model.vo.AdminReviewMngtVo">
		SELECT R.REVIEW_NO, R.REPORT_DATE, 
		    CASE R.REPORT_STATUS
		        WHEN 1 THEN '미확인'
		        WHEN 2 THEN '삭제'
		        WHEN 3 THEN '반려'
		        ELSE '알 수 없음'
		    END AS REPORT_STATUS, 
		    B.REVIEW_CONTENT, B.USER_ID, B.BIZ_ID, R.REPORT_REASON
		FROM REVIEW_REPORT R
		JOIN BIZ_REVIEW B ON R.REVIEW_NO = B.REVIEW_NO
		<choose>
			<when test="searchOption != null and searchOption == 'title'">  WHERE REPORT_REASON LIKE '%'|| #{searchBox} ||'%'</when>
			<when test="searchOption != null and searchOption == 'writer'"> WHERE BIZ_ID LIKE '%'|| #{searchBox} ||'%'</when>
			<when test="searchOption != null and searchOption == 'content'"> WHERE REVIEW_CONTENT LIKE '%'|| #{searchBox} ||'%'</when>
		</choose>
		ORDER BY R.REPORT_DATE DESC
	</select>
	<!-- 신고 리뷰 상세내용 -->
	<select id="selectReviewReportDetail" resultType="kh.finalproject.sims.admin.model.vo.AdminReviewMngtVo" parameterType="_int">
		SELECT R.REVIEW_NO, R.REPORT_DATE, 
	    CASE R.REPORT_STATUS
	        WHEN 1 THEN '미확인'
	        WHEN 2 THEN '삭제'
	        WHEN 3 THEN '반려'
	        ELSE '알 수 없음'
	    END AS REPORT_STATUS, 
	    B.REVIEW_CONTENT, B.USER_ID, B.BIZ_ID, R.REPORT_REASON
	FROM REVIEW_REPORT R
	JOIN BIZ_REVIEW B ON R.REVIEW_NO = B.REVIEW_NO
	WHERE R.REVIEW_NO = #{reviewNo}
	ORDER BY R.REPORT_DATE DESC
	</select>
	<!-- 신고 리뷰 반려/삭제 처리-->
	<update id="updateReviewReportStatus" parameterType="kh.finalproject.sims.admin.model.vo.AdminReviewMngtVo">
		UPDATE REVIEW_REPORT SET REPORT_STATUS = #{reportStatus} WHERE REVIEW_NO = #{reviewNo}
	</update>
	<!-- 리뷰 숨김처리(1:숨김)-->
	<update id="updateReviewHidden" parameterType="kh.finalproject.sims.admin.model.vo.AdminReviewMngtVo">
		UPDATE BIZ_REVIEW SET REVIEW_HIDDEN = #{reviewHidden} WHERE REVIEW_NO = #{reviewNo}
	</update>
	
	<!-- 리뷰 목록 -->
	<select id="selectReviewList" resultType="kh.finalproject.sims.admin.model.vo.AdminReviewMngtVo">
		SELECT 
		  REVIEW_NO
		, REVIEW_CONTENT
		, REVIEW_DATE
		, REVIEW_STAR
		, USER_ID
		, BIZ_ID
		, REVIEW_HIDDEN 
		FROM BIZ_REVIEW
		ORDER BY REVIEW_DATE DESC
	</select>
	
	<!-- 리뷰 검색 -->
	<select id="selectSearchReviewList" resultType="kh.finalproject.sims.admin.model.vo.AdminReviewMngtVo">
		SELECT * FROM BIZ_REVIEW 
		<choose>
			<when test="searchOption != null and searchOption == 'writer'"> WHERE USER_ID LIKE '%'|| #{searchBox} ||'%'</when>
			<when test="searchOption != null and searchOption == 'content'"> WHERE REVIEW_CONTENT LIKE '%'|| #{searchBox} ||'%'</when>
		</choose>
		ORDER BY REVIEW_DATE DESC
	</select>
	
	<!-- 리뷰 삭제 -->
	<delete id="deleteReview" parameterType="_int">
		delete from biz_review where review_no = #{reviewNo}
	</delete>
	
	<!-- 리뷰 상세 내용 -->
	<select id="selectReviewDetail" parameterType="_int" resultType="kh.finalproject.sims.admin.model.vo.AdminReviewMngtVo">
		SELECT 
	  REVIEW_NO
	, REVIEW_CONTENT
	, REVIEW_DATE
	, REVIEW_STAR
	, USER_ID
	, BIZ_ID
	, REVIEW_HIDDEN 
	FROM BIZ_REVIEW WHERE REVIEW_NO=#{reviewNo}
	</select>
	
	<!-- 문의 내역 리스트 -->
	<select id="selectQnaList" resultType="kh.finalproject.sims.admin.model.vo.AdminQnaMngtVo">
		SELECT 
		AQ_NO
		, USER_ID
		, AQ_TITLE
		, AQ_CONTENT
		, AQ_DATE
		, AQ_REDATE
		, AQ_VIEWS
		, AQ_ANSWERS
		FROM QNA
		ORDER BY AQ_DATE DESC
	</select>
	
	<!-- 문의 내역 검색 -->
	<select id="selectSearchQnaList" resultType="kh.finalproject.sims.admin.model.vo.AdminQnaMngtVo">
		SELECT 
		AQ_NO
		, USER_ID
		, AQ_TITLE
		, AQ_CONTENT
		, AQ_DATE
		, AQ_REDATE
		, AQ_VIEWS
		, AQ_ANSWERS
		FROM QNA
		<choose>
			<when test="searchOption != null and searchOption == 'title'"> WHERE AQ_TITLE LIKE '%'|| #{searchBox} ||'%'</when>
			<when test="searchOption != null and searchOption == 'writer'"> WHERE USER_ID LIKE '%'|| #{searchBox} ||'%'</when>
			<when test="searchOption != null and searchOption == 'content'"> WHERE AQ_CONTENT LIKE '%'|| #{searchBox} ||'%'</when>
		</choose>
		ORDER BY AQ_DATE DESC
	</select>
	
	
 	<!-- 문의 내역 상세 내용 -->
	<select id="selectQnaListDetail" resultType="kh.finalproject.sims.admin.model.vo.AdminQnaMngtVo">
		SELECT 
		AQ_NO
		, USER_ID
		, AQ_TITLE
		, AQ_CONTENT
		, AQ_DATE
		, AQ_REDATE
		, AQ_VIEWS
		, AQ_ANSWERS
		FROM QNA
		WHERE AQ_NO = #{aqNo}
	</select> 	
	 
	<!-- 문의 내역 상세 내용 JOIN -->
	<!-- 실패
	<select id="selectQnaListDetail" resultType="kh.finalproject.sims.admin.model.vo.AdminQnaMngtVo">
		SELECT *
		FROM QNA
		LEFT JOIN QNA_ANS ON QNA.AQ_NO = QNA_ANS.AQ_NO
		LEFT JOIN QNA_RPL ON QNA_ANS.AA_NO = QNA_RPL.AA_NO
		WHERE QNA.AQ_NO = #{aqNo}
	</select>
	  -->
	
	<!-- 문의 내역 답변/대댓글 조회 -->
	<!-- <select id="selectQnaAnsList" resultType="kh.finalproject.sims.admin.model.vo.AdminQnaAnsVo"> AdminQnaAnsVo안에  List<replyVo>가 들어있는데 이건 왜 안되는걸까요?? -->
	<select id="selectQnaAnsList" resultMap="adminQnaAnsCollectionMap">
        SELECT AQ_NO, AA_NO, QNA_RPL.RPL_NO, QNA_ANS.ADMIN_ID AS ANS_ADMIN_ID, QNA_ANS.USER_ID AS ANS_USER_ID, AA_CONTENT, AA_DATE, AA_REDATE, QNA_RPL.RPL_CONTENT, QNA_RPL.ADMIN_ID AS RPL_ADMIN_ID, QNA_RPL.USER_ID AS RPL_USER_ID, QNA_RPL.RPL_DATE, QNA_RPL.RPL_REDATE
		FROM QNA_ANS LEFT OUTER JOIN QNA_RPL USING (AA_NO)
		WHERE AQ_NO = #{aqNo}
	</select>
	
	
	<!-- 문의 내역 답변 작성 -->
	<insert id="insertQnaAnsWrite" parameterType="kh.finalproject.sims.admin.model.vo.AdminQnaAnsVo">
		INSERT INTO 
		QNA_ANS (AA_NO, AQ_NO, ADMIN_ID, AA_CONTENT, AA_DATE) 
		values (QNA_ANS_SEQ.NEXTVAL, #{aqNo}, #{adminId}, #{aaContent}, DEFAULT)
	</insert>

	
	<!-- 문의 내역  댓글 작성 -->
	<insert id="insertQnaReplyWrite" parameterType="kh.finalproject.sims.admin.model.vo.AdminQnaReplyVo">
		INSERT INTO QNA_RPL 
		(RPL_NO, AA_NO, RPL_DATE, RPL_CONTENT,ADMIN_ID) 
		values (QNA_RPL_SEQ.NEXTVAL, #{aaNo}, DEFAULT, #{rplContent}, #{adminId})
	</insert>
	
	<!-- 문의 내역 답변 삭제 -->
	<delete id="deleteQnaAns" parameterType="_int">
		DELETE FROM QNA_ANS where AA_NO=#{aaNo}
	</delete>
	
	<!-- 문의 내역 답변 수정 -->
	<update id="updateQnaAns" parameterType="kh.finalproject.sims.admin.model.vo.AdminQnaAnsVo">
		UPDATE QNA_ANS SET AA_CONTENT = #{aaContent}, AA_REDATE=SYSTIMESTAMP WHERE AA_NO=#{aaNo}
	</update>
</mapper>
