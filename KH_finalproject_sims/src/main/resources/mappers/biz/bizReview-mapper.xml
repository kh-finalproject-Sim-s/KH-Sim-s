<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="bizReview">
  <!-- 리뷰 리스트 출력 개수 -->
  <select id="getReviewListCount" resultType="_int">
  	SELECT count(*) listCnt
	FROM (
	    SELECT  REVIEW_CONTENT, REVIEW_STAR, USER_ID, REVIEW_DATE
	    FROM biz_review
	    WHERE biz_id = #{bizid}
	    AND REVIEW_HIDDEN != 1
)
  </select>
  
  <!-- paging -->
  <!-- 분류 : 전체 -->
  <select id="selectPage" parameterType="map" resultType="kh.finalproject.sims.biz.model.vo.BizReviewMngtVo">
  	SELECT * 
	FROM (
	    SELECT ROW_NUMBER() OVER (ORDER BY REVIEW_NO DESC) rn, 
	    		REVIEW_CONTENT, REVIEW_STAR, USER_ID, REVIEW_DATE, REVIEW_NO, REPORT_STATUS
	    FROM biz_review
	    LEFT JOIN  REVIEW_REPORT
        USING(REVIEW_NO)
	    WHERE biz_id = #{bizid}
	    AND REVIEW_HIDDEN != 1
	) 
	WHERE rn BETWEEN #{start} AND #{end}
  </select>
  
  <!-- 신고처리상태에 따른 분류 -->
  <select id="selectByReportStatus" parameterType ="map" resultType="kh.finalproject.sims.biz.model.vo.BizReviewMngtVo">
  SELECT * 
	FROM (
	    SELECT ROW_NUMBER() OVER (ORDER BY REVIEW_NO DESC) rn, 
	    		REVIEW_CONTENT, REVIEW_STAR, USER_ID, REVIEW_DATE, REVIEW_NO, REPORT_STATUS
	    FROM biz_review
	    LEFT JOIN  REVIEW_REPORT
        USING(REVIEW_NO)
	    WHERE biz_id = #{bizid}
	   
	    <if test ="reportStatus != 0 or (reportStatus != null and reportStatus !='')">
        	AND REPORT_STATUS = #{reportStatus}
        </if>
	)
	WHERE rn BETWEEN #{start} AND #{end}
  
  </select>
  
  <!-- 신고처리상태에 따른 분류 목록 개수 -->
  <select id="selectByReportStatusCnt" parameterType ="map" resultType="_int">
  SELECT count(*) listCnt 
	FROM (
	    SELECT ROW_NUMBER() OVER (ORDER BY REVIEW_NO DESC) rn, 
	    		REVIEW_CONTENT, REVIEW_STAR, USER_ID, REVIEW_DATE, REVIEW_NO, REPORT_STATUS
	    FROM biz_review
	    LEFT JOIN  REVIEW_REPORT
        USING(REVIEW_NO)
	    WHERE biz_id = #{bizid}
	    
	    <if test ="reportStatus != 0 or (reportStatus != null and reportStatus !='')">
        	AND REPORT_STATUS = #{reportStatus}
        </if>
	)
  </select>
  
  
  <!-- 리뷰 신고 -->
  <insert id="reportReview">
  insert into review_report (REVIEW_NO, REPORT_DATE, REPORT_STATUS, REPORT_REASON)
 	values( #{reviewNo}, sysdate, 1, #{reportReason})
  </insert>
  
  <!-- 리뷰 신고 취소하기 -->
  <delete id="cancleReport">
  delete from review_report where REVIEW_NO = ${reviewNo}
  </delete>
  

	<!-- 사용자 페이지 -->
	
	<!-- 작성한 리뷰 리스트 -->
	 <select id="selectReviewList" parameterType="string" resultType="brVo">
	 	select review_no, review_content, review_date, review_redate, review_star, user_id, biz_id
		     , (select b.biz_name from biz b where b.biz_id = Br.biz_id) as biz_name
		from biz_review Br
		where Br.user_id=#{userId} and review_hidden=0
		order by review_date desc
	</select>
  
	<!-- 리뷰 작성 -->
	<insert id="insertReview" parameterType="brVo">
		insert into biz_review values(biz_review_seq.nextval, #{reviewContent}, systimestamp, null, #{reviewStar}, #{userId}, #{bizId}, 0)
	</insert>
	
	<!-- 리뷰 수정 -->
	<update id="updateReview" parameterType="brVo">
		update biz_review set review_content=#{reviewContent}, review_star=#{reviewStar} where review_no=#{reviewNo}
	</update>
	
	<!-- 리뷰 삭제 -->
	<delete id="deleteReview" parameterType="brVo">
		delete from biz_review where review_no=#{reviewNo}
	</delete>
	
	<!-- biz 리뷰 평점 수정 -->
	<update id="updateBizReviewAvg" parameterType="string">
		update biz set biz_review_star=(
		    select trunc(avg(review_star)/2, 1) as review_avg from biz_review
		    where biz_id=#{bizId} and review_hidden=0)
		where biz_id=#{bizId}
	</update>

	<!-- 리뷰 상세 보기 -->
	<select id="selectReviewDetail" resultType="kh.finalproject.sims.biz.model.vo.BizReviewMngtVo">
		select * 
		from biz_review 
		where review_no = #{reviewNo} and review_hidden=0
	</select>
  
  	<!-- 통신사 페이지 리뷰 -->
  	<select id="selectBizReviewList" parameterType="string" resultType="brVo">
  		select * from biz_review
  		where biz_id=#{bizId} and review_hidden=0
  		order by review_date desc
  	</select>

</mapper>
